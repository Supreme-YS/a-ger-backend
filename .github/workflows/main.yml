# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env :
      working-directory: ./
      
    steps:
    - uses: actions/checkout@v2
      env:
        APPLICATION: ${{ secrets.APPLICATION }}
    - run: touch ./src/resource/application.yml
    - run: echo "$APPLICATION" > ./src/resource/application.yml
    - uses: actions/upload-artifact@v2
      with:
        name: application.yml
        path: ./src/resource/application.yml
        
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
              
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
              ${{ runner.os }}-gradle-
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}
      
    - name: Build with Gradle
      run: ./gradlew build
      env: 
        AWS_ACCESSKEY: ${{ secrets.AWS_ACCESSKEY }}
        AWS_SECRETKEY: ${{ secrets.AWS_SECRETKEY }}
        AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        AWS_S3_BUCKET_URL: ${{ secrets.AWS_S3_BUCKET_URL }}
        KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
        KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
        POSTGRES_USERNAME: ${{ secrets.POSTGRES_USERNAME }}
        SPRING_REDIS_HOST: ${{ secrets.SPRING_REDIS_HOST }}
      working-directory: ${{ env.working-directory }}
      
    - name: Cleanup Gradle Cache
      if: ${{ always() }}
      run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
          
    - name: Docker build
      run: |
           docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
           docker build -t ager .
           docker tag ager supremeys/ager:${GITHUB_SHA::7}
           docker push supremeys/ager:${GITHUB_SHA::7}
           
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
       host: ec2-13-125-187-246.ap-northeast-2.compute.amazonaws.com
       username: ec2-user
       key: ${{ secrets.PRIVATE_KEY }}
       envs: GITHUB_SHA
       script: |
            docker rmi $(docker images -q)
            docker pull supremeys/ager:${GITHUB_SHA::7}
            docker tag supremeys/ager:${GITHUB_SHA::7} ager
            docker stop ager
            docker rm ager
            docker run -d --name ager -p 80:8080 ager
               
    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: Github Action Test
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()
  
